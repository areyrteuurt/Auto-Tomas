name: Scrape-By-Country

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */8 * * *"

permissions:
  contents: write

jobs:
  scrape-and-commit:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get full repository history

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: ‚öôÔ∏è Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Files/requirements.txt

      - name: üìÇ Check input files
        run: |
          echo "Checking urls.txt:"
          cat Files/urls.txt || echo "urls.txt not found"
          echo "Checking key.json:"
          cat Files/key.json || echo "key.json not found"

      - name: üï∏Ô∏è Run scraping script
        run: |
          python Files/scrip.py || { echo "Scraper failed, check logs"; exit 1; }  # Run scraping script

      - name: üìÇ Check directory contents
        run: |
          echo "Listing repository contents:"
          ls -R
          echo "Checking for configs:"
          ls -la configs/ || echo "configs does not exist or is empty"
          echo "Checking for README.md:"
          ls -la README.md || echo "README.md does not exist"

      - name: üõ†Ô∏è Create configs if not exists
        run: |
          mkdir -p configs
          touch configs/.gitkeep
          echo "Created configs/.gitkeep"

      - name: üîß Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: ‚¨ÜÔ∏è Commit and Push Changes
        run: |
          git add configs/ README.md || true
          if git diff --staged --quiet; then
            echo "No changes detected. Skipping commit."
          else
            echo "Changes detected. Committing..."
            git commit -m "docs: Update README and config files $(date '+%Y-%m-%d %H:%M:%S')"
            echo "Pulling remote changes with rebase..."
            git fetch origin
            git pull --rebase origin main || { echo "Rebase failed, aborting..."; git rebase --abort; exit 1; }
            echo "Pushing changes..."
            git push origin main || { echo "Push failed"; exit 1; }
          fi
